import React from 'react';import PropTypes from 'prop-types';import { withStyles } from '@material-ui/core/styles';import Tabs from '@material-ui/core/Tabs';import Tab from '@material-ui/core/Tab';import Typography from '@material-ui/core/Typography';import { Link} from "react-router-dom";import List from "@material-ui/core/List";import ListItem from "@material-ui/core/ListItem";import MenuItem from "@material-ui/core/MenuItem";import Button from "components/CustomButtons/Button.jsx";import headerLinksStyle from "assets/jss/material-kit-react/components/headerLinksStyle.jsx";const buttonStyle = {      textTransform: 'initial',        fontSize: "16px",       color:"#ffffff", };const selectStyle = {      textTransform: 'initial',        fontSize: "16px",       borderBottom: "2px solid #00ffff",       color:"#00ffff",       active: {        backgroundColor: "#ff0000"        } };const styles = theme => ({  tabsIndicator: {      backgroundColor: '#40a9ff',  },  tabRoot: {    minWidth: 30,      textTransform: 'initial',    fontWeight: theme.typography.fontWeightRegular,    marginRight: theme.spacing.unit * 4,    fontFamily: [      '-apple-system',      'BlinkMacSystemFont',      '"Segoe UI"',      'Roboto',      '"Helvetica Neue"',      'Arial',      'sans-serif',      '"Apple Color Emoji"',      '"Segoe UI Emoji"',      '"Segoe UI Symbol"',    ].join(','),    '&:hover': {      color: '#ffffff',      opacity: 1,    },    '&$tabSelected': {      color: '#40a9ff',      fontWeight: theme.typography.fontWeightMedium,    },    '&:focus': {      color: '#40a9ff',    },  },  tabSelected: {},  typography: {    padding: theme.spacing.unit * 3,  },});function LeftLinks({ ...props }) {      const { classes, menu } = props;    const Menu = (Object.keys(menu).length === 0 ) ? "" :         (menu.map( item=>         <Link to={"/"+item.link} className={classes.listItem} key={item.itemId}>         <ListItem className={classes.listItem} key={item.itemId} >        <Button          color="transparent"          className={classes.navItem}        >                    {item.title}        </Button>      </ListItem>      </Link>    ));     return (    <List className={classes.list} >    {Menu}      </List>    );   }LeftLinks.propTypes = {  classes: PropTypes.object.isRequired,};export default withStyles(headerLinksStyle)(LeftLinks);