import React from 'react';import PropTypes from 'prop-types';import { withStyles } from '@material-ui/core/styles';import Tabs from '@material-ui/core/Tabs';import Tab from '@material-ui/core/Tab';import Typography from '@material-ui/core/Typography';import { Link, Route, Switch} from "react-router-dom";import List from "@material-ui/core/List";import ListItem from "@material-ui/core/ListItem";import MenuItem from "@material-ui/core/MenuItem";import Button from "components/CustomButtons/Button.jsx";import SideLinks from "components/Header/SideLinks.jsx";import headerLinksStyle from "assets/jss/material-kit-react/components/headerLinksStyle.jsx";const buttonStyle = {      textTransform: 'initial',        fontSize: "16px",       color:"#ffffff", };const selectStyle = {      textTransform: 'initial',        fontSize: "16px",       borderBottom: "2px solid #00ffff",       color:"#00ffff",       active: {        backgroundColor: "#ff0000"        } };const styles = theme => ({  tabsIndicator: {      backgroundColor: '#40a9ff',  },  tabRoot: {    minWidth: 30,      textTransform: 'initial',    fontWeight: theme.typography.fontWeightRegular,    marginRight: theme.spacing.unit * 4,    fontFamily: [      '-apple-system',      'BlinkMacSystemFont',      '"Segoe UI"',      'Roboto',      '"Helvetica Neue"',      'Arial',      'sans-serif',      '"Apple Color Emoji"',      '"Segoe UI Emoji"',      '"Segoe UI Symbol"',    ].join(','),    '&:hover': {      color: '#ffffff',      opacity: 1,    },    '&$tabSelected': {      color: '#40a9ff',      fontWeight: theme.typography.fontWeightMedium,    },    '&:focus': {      color: '#40a9ff',    },  },  tabSelected: {},  typography: {    padding: theme.spacing.unit * 3,  },});function SideRoutes({ ...props }) {      const { classes, menu } = props;    console.log("sideRoutes menu:",menu);    const Menu = (Object.keys(menu).length === 0 ) ? "" :         (  menu.map(item=>               <Route exact path= {"/"+item.link} key={item.itemId}               render={(props) => <SideLinks {...props} menu = {item.children}/>}               />    ));   console.log("SideRoutes Menu:",Menu);     return (    <div>     <Switch>        {Menu}     </Switch>    </div>    );   }SideRoutes.propTypes = {  classes: PropTypes.object.isRequired,};export default withStyles(headerLinksStyle)(SideRoutes);